{"version":3,"file":"FullscreenDialog.99ec288c.js","sources":["../../src/components/Dialogs/FullscreenDialog/FullscreenDialog.vue"],"sourcesContent":["<template>\n  <GDialog\n    v-model=\"value\"\n    fullscreen\n    transition=\"custom-slide-up-transition\"\n  >\n    <div\n      min-h=\"full\"\n    >\n      <DialogToolbar @close=\"onClose\">\n        <h4>\n          Fullscreen Dialog\n        </h4>\n      </DialogToolbar>\n\n      <div p=\"x-5 y-4\">\n        <BooleanSwitch\n          v-model=\"longContent\"\n          label=\"Long Content\"\n        />\n\n        <div\n          v-if=\"longContent\"\n          bg=\"purple-500\"\n          font=\"semibold\"\n          h=\"screen\"\n          p=\"6\"\n          rounded=\"md\"\n          text=\"xl white\"\n        >\n          Long Content\n        </div>\n      </div>\n    </div>\n  </GDialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { GDialog } from 'gitart-vue-dialog'\n\nimport DialogToolbar from '@/components/Dialog/DialogToolbar.vue'\nimport BooleanSwitch from '@/components/PropControls/BooleanSwitch/BooleanSwitch.vue'\n\nexport default defineComponent({\n  name: 'FullscreenDialog',\n  components: {\n    GDialog,\n    DialogToolbar,\n    BooleanSwitch,\n  },\n\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup(props, { emit }) {\n    const value = useVModel(props, 'modelValue', emit)\n    const onClose = () => {\n      value.value = false\n    }\n\n    const longContent = ref(false)\n\n    return {\n      value,\n      onClose,\n\n      longContent,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.custom-slide-up-transition {\n  opacity: 0;\n\n  &-enter-from {\n    transform: translate(0, 40%);\n    opacity: 0;\n  }\n\n  &-leave-to {\n    opacity: 0;\n  }\n}\n</style>"],"names":["defineComponent","name","components","GDialog","DialogToolbar","BooleanSwitch","props","modelValue","type","Boolean","default","emits","val","setup","emit","value","useVModel","longContent","ref","onClose"],"mappings":"8MA6CA,MAAeA,EAAgB,CAC7BC,KAAM,mBACNC,WAAY,SACVC,gBACAC,gBACAC,GAGFC,MAAO,CACLC,WAAY,CACVC,KAAMC,QACNC,SAAS,IAIbC,MAAO,CACL,oBAAsBC,IAAiB,GAGzCC,MAAMP,GAAOQ,KAAEA,UACPC,EAAQC,EAAUV,EAAO,aAAcQ,GAKvCG,EAAcC,GAAI,SAEjB,CACLH,MAAAA,EACAI,QARc,OACRJ,OAAQ,GASdE,YAAAA"}