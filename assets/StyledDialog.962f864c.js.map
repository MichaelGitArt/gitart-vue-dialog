{"version":3,"file":"StyledDialog.962f864c.js","sources":["../../src/components/Dialogs/StyledDialog/StyledDialog.vue"],"sourcesContent":["<template>\n  <GDialog\n    v-model=\"value\"\n    transition=\"custom-rotate-transition\"\n    overlay-background=\"rgba(143, 108, 249, 0.4)\"\n    :max-width=\"400\"\n  >\n    <DialogToolbar @close=\"onClose\">\n      <h4>\n        Styled Dialog\n      </h4>\n    </DialogToolbar>\n\n    <div p=\"x-5 y-4\">\n      <p>\n        Some content\n      </p>\n    </div>\n  </GDialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { GDialog } from 'gitart-vue-dialog'\n\nimport DialogToolbar from '@/components/Dialog/DialogToolbar.vue'\n\nexport default defineComponent({\n  name: 'StyledDialog',\n  components: {\n    GDialog,\n    DialogToolbar,\n  },\n\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (val: boolean) => true,\n  },\n\n  setup(props, { emit }) {\n    const value = useVModel(props, 'modelValue', emit)\n\n    const onClose = () => {\n      value.value = false\n    }\n\n    return {\n      value,\n      onClose,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\" >\n.custom-rotate-transition {\n  &-enter-active,\n  &-leave-active {\n    transition-timing-function: linear;\n  }\n\n  &-enter-from {\n    transform: translate(0, 30px) rotate(12deg);\n    opacity: 0;\n  }\n\n  &-leave-to {\n    transform: translate(0, 30px) rotate(4deg);\n    opacity: 0;\n  }\n}\n</style>"],"names":["defineComponent","name","components","GDialog","DialogToolbar","props","modelValue","type","Boolean","default","emits","val","setup","emit","value","useVModel","onClose"],"mappings":"yIA4BA,MAAeA,EAAgB,CAC7BC,KAAM,eACNC,WAAY,SACVC,gBACAC,GAGFC,MAAO,CACLC,WAAY,CACVC,KAAMC,QACNC,SAAS,IAIbC,MAAO,CACL,oBAAsBC,IAAiB,GAGzCC,MAAMP,GAAOQ,KAAEA,UACPC,EAAQC,EAAUV,EAAO,aAAcQ,SAMtC,CACLC,MAAAA,EACAE,QANc,OACRF,OAAQ"}